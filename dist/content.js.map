{"version":3,"file":"content.js","mappings":";;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5PA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAQA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACtLA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;;AAEA;AACA;AACA;AACA","sources":["webpack://pagedownloadextension/./src/content/index.js","webpack://pagedownloadextension/./src/content/toastUI.js","webpack://pagedownloadextension/./src/content/resourceCollector.js","webpack://pagedownloadextension/./src/content/toastHandlers.js","webpack://pagedownloadextension/webpack/bootstrap","webpack://pagedownloadextension/./src/content/content-wrapper.js"],"sourcesContent":["const { createToastElement } = require('./toastUI');\nconst { showToast, hideToast, updateToast, completeToast, addFileStatus } = require('./toastHandlers');\nconst { cleanupExtensionElements, collectPageResources } = require('./resourceCollector');\n\n// Set up message listener\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n\tif (message.type === 'DOWNLOAD_PROGRESS') {\n\t\tupdateToast(message.percentage);\n\t} else if (message.type === 'DOWNLOAD_COMPLETE') {\n\t\tcompleteToast(message.filename);\n\t} else if (message.type === 'DOWNLOAD_STARTED') {\n\t\tshowToast();\n\t} else if (message.type === 'FILE_STATUS') {\n\t\t// New message type for file status\n\t\taddFileStatus(message.url, message.status, message.reason);\n\t} else if (message.type === 'LOG') {\n\t\t// Log background messages in the page console\n\t\tif (message.level && console[message.level]) {\n\t\t\tconsole[message.level](`[Background] ${message.message}`);\n\t\t} else {\n\t\t\tconsole.log(`[Background] ${message.message}`);\n\t\t}\n\t}\n});\n\n// Initialize toast\ncreateToastElement();\n\n// Collect and send resources\ncollectPageResources();\n","// DOM elements for the toast\nlet toast, progressBar, progressFill, fileStatusContainer, statusElement;\n\n/**\n * Creates the toast notification UI\n */\nfunction createToastElement() {\n\t// Remove any existing toasts first\n\tconst existingToast = document.getElementById('page-download-toast');\n\tif (existingToast) {\n\t\texistingToast.remove();\n\t}\n\n\ttoast = document.createElement('div');\n\ttoast.id = 'page-download-toast';\n\ttoast.setAttribute('role', 'alert');\n\ttoast.setAttribute('aria-live', 'assertive');\n\ttoast.setAttribute('data-extension-ui', 'page-download-extension');\n\n\t// Style the toast\n\ttoast.style.cssText = `\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background-color: rgba(42, 42, 46, 0.97);\n    color: #f8f8f8;\n    padding: 16px;\n    border-radius: 8px;\n    z-index: 2147483647;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n    display: none;\n    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);\n    transition: all 0.3s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n    max-width: 400px;\n    max-height: 85vh;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  `;\n\n\t// sr-only class for screen readers\n\tconst sronly = document.createElement('style');\n\tsronly.textContent = `\n    .sr-only {\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      padding: 0;\n      margin: -1px;\n      overflow: hidden;\n      clip: rect(0, 0, 0, 0);\n      white-space: nowrap;\n      border-width: 0;\n    }\n  `;\n\tdocument.head.appendChild(sronly);\n\n\t// Create header\n\tconst header = document.createElement('div');\n\theader.style.cssText = `\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 12px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n    padding-bottom: 12px;\n  `;\n\n\t// Title\n\tconst title = document.createElement('div');\n\ttitle.textContent = 'Page Download';\n\ttitle.style.cssText = `\n    font-weight: 600;\n    font-size: 15px;\n    letter-spacing: 0.3px;\n  `;\n\n\t// Close button\n\tconst closeBtn = document.createElement('button');\n\tcloseBtn.innerHTML = '&times;';\n\tcloseBtn.style.cssText = `\n    background: none;\n    border: none;\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 28px;\n    font-weight: 300;\n    cursor: pointer;\n    padding: 0 8px;\n    line-height: 0.8;\n    margin-right: -6px;\n    margin-top: -6px;\n    transition: color 0.2s ease;\n  `;\n\n\t// Add hover effects to close button\n\tcloseBtn.onmouseover = () => {\n\t\tcloseBtn.style.color = 'white';\n\t};\n\tcloseBtn.onmouseout = () => {\n\t\tcloseBtn.style.color = 'rgba(255, 255, 255, 0.8)';\n\t};\n\n\t// Import here to avoid circular dependency\n\tconst { hideToast } = require('./toastHandlers');\n\tcloseBtn.onclick = hideToast;\n\n\theader.appendChild(title);\n\theader.appendChild(closeBtn);\n\ttoast.appendChild(header);\n\n\t// Status message\n\tstatusElement = document.createElement('div');\n\tstatusElement.id = 'page-download-status';\n\tstatusElement.textContent = 'Downloading page: 0%';\n\tstatusElement.style.cssText = `\n    font-size: 11px;\n  `;\n\ttoast.appendChild(statusElement);\n\n\t// Progress bar\n\tprogressBar = document.createElement('div');\n\tprogressBar.id = 'page-download-progress-bar';\n\tprogressBar.style.cssText = `\n    width: 100%;\n    background-color: rgba(255, 255, 255, 0.1);\n    height: 6px;\n    margin-top: 10px;\n    margin-bottom: 14px;\n    border-radius: 6px;\n    overflow: hidden;\n  `;\n\n\t// Progress fill\n\tprogressFill = document.createElement('div');\n\tprogressFill.id = 'page-download-progress-fill';\n\tprogressFill.style.cssText = `\n    height: 100%;\n    background-color: #4688F1;\n    width: 0%;\n    transition: width 0.3s ease;\n  `;\n\n\tprogressBar.appendChild(progressFill);\n\ttoast.appendChild(progressBar);\n\n\t// File status container with scrolling\n\tfileStatusContainer = document.createElement('div');\n\tfileStatusContainer.id = 'file-status-container';\n\tfileStatusContainer.style.cssText = `\n    max-height: 250px;\n    overflow-y: auto;\n    margin-top: 12px;\n    font-size: 11px;\n    display: none;\n    padding-right: 5px;\n    scrollbar-width: thin;\n    scrollbar-color: rgba(255, 255, 255, 0.3) transparent;\n  `;\n\n\t// Create sections for each file status category\n\tconst categories = ['success', 'skipped', 'failed'];\n\tcategories.forEach(category => {\n\t\tconst section = document.createElement('div');\n\t\tsection.id = `${category}-files`;\n\t\tsection.style.cssText = `\n      margin-bottom: 10px;\n      display: none;\n    `;\n\n\t\tconst heading = document.createElement('div');\n\t\theading.style.cssText = `\n      font-weight: bold;\n      margin-bottom: 5px;\n      color: ${category === 'success' ? '#4CAF50' : category === 'skipped' ? '#FFC107' : '#F44336'};\n    `;\n\n\t\theading.textContent = category === 'success' ? 'Downloaded Files:' :\n\t\t\tcategory === 'skipped' ? 'Skipped Files:' : 'Failed Files:';\n\n\t\tconst list = document.createElement('ul');\n\t\tlist.id = `${category}-list`;\n\t\tlist.style.cssText = `\n      list-style-type: none;\n      padding-left: 0;\n      margin: 0;\n    `;\n\n\t\tsection.appendChild(heading);\n\t\tsection.appendChild(list);\n\t\tfileStatusContainer.appendChild(section);\n\t});\n\n\ttoast.appendChild(fileStatusContainer);\n\tdocument.body.appendChild(toast);\n\n\t// Keyboard navigation and accessibility\n\tconst focusableElements = toast.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\tconst firstElement = focusableElements[0];\n\tconst lastElement = focusableElements[focusableElements.length - 1];\n\n\t// Trap focus in modal\n\ttoast.addEventListener('keydown', function (e) {\n\t\tif (e.key === 'Tab') {\n\t\t\tif (e.shiftKey && document.activeElement === firstElement) {\n\t\t\t\te.preventDefault();\n\t\t\t\tlastElement.focus();\n\t\t\t} else if (!e.shiftKey && document.activeElement === lastElement) {\n\t\t\t\te.preventDefault();\n\t\t\t\tfirstElement.focus();\n\t\t\t}\n\t\t} else if (e.key === 'Escape') {\n\t\t\tconst { hideToast } = require('./toastHandlers');\n\t\t\thideToast();\n\t\t}\n\t});\n\n\treturn toast;\n}\n\n/**\n * Get the toast DOM elements\n */\nfunction getToastElements() {\n\treturn {\n\t\ttoast: document.getElementById('page-download-toast'),\n\t\tprogressBar: document.getElementById('page-download-progress-bar'),\n\t\tprogressFill: document.getElementById('page-download-progress-fill'),\n\t\tfileStatusContainer: document.getElementById('file-status-container'),\n\t\tstatusElement: document.getElementById('page-download-status')\n\t};\n}\n\n/**\n * Hide the toast notification\n */\nfunction hideToast() {\n\tconst { toast } = getToastElements();\n\tif (toast) {\n\t\ttoast.style.opacity = '0';\n\t\tsetTimeout(() => {\n\t\t\tif (toast.parentNode) {\n\t\t\t\ttoast.parentNode.removeChild(toast);\n\t\t\t}\n\t\t}, 300);\n\t}\n}\n\n// Export as CommonJS module\nmodule.exports = {\n\tcreateToastElement,\n\tgetToastElements,\n\thideToast\n};\n","// Collected resources to be sent to background script\nconst collectedResources = [];\n\n/**\n * Remove extension UI elements from the HTML being downloaded\n */\nfunction cleanupExtensionElements(html) {\n\t// Create a DOM parser to work with the HTML string\n\tconst parser = new DOMParser();\n\tconst doc = parser.parseFromString(html, 'text/html');\n\n\t// Remove extension toast notification\n\tconst toast = doc.getElementById('page-download-toast');\n\tif (toast) {\n\t\ttoast.remove();\n\t}\n\n\t// Remove any other extension elements by their IDs or classes\n\tconst extensionElements = doc.querySelectorAll(\n\t\t'#page-download-progress-bar, ' +\n\t\t'#page-download-progress-fill, ' +\n\t\t'#page-download-status, ' +\n\t\t'#file-status-container, ' +\n\t\t'[data-extension-ui=\"page-download-extension\"]'\n\t);\n\n\textensionElements.forEach(el => el.remove());\n\n\t// Return the cleaned HTML\n\treturn doc.documentElement.outerHTML;\n}\n\n/**\n * Add a resource to the collection\n */\nfunction addResource(url, type) {\n\ttry {\n\t\tif (!url) return;\n\n\t\tif (url.startsWith('data:') && type !== \"image\") return;\n\n\t\t// Remove quotes from URL if present\n\t\tconst cleanUrl = url.replace(/^['\"](.*)['\"]$/, '$1');\n\n\t\t// Convert to absolute URL\n\t\tconst absoluteUrl = new URL(cleanUrl, window.location.href).href;\n\n\t\t// Check if this resource is already in the collection\n\t\tconst exists = collectedResources.some(res => res.url === absoluteUrl);\n\t\tif (!exists) {\n\t\t\tcollectedResources.push({\n\t\t\t\turl: absoluteUrl,\n\t\t\t\ttype: type,\n\t\t\t\tfilename: cleanUrl.startsWith('data:')\n\t\t\t\t\t? `data-image-${collectedResources.length}.png`\n\t\t\t\t\t: absoluteUrl.split('/').pop().split('?')[0]\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\tconsole.warn(`Skipping invalid URL: ${url}`, e);\n\t}\n}\n\n/**\n * Collect all resources from the page\n */\nfunction collectAllResources() {\n\t// Process img tags\n\tdocument.querySelectorAll(\"img[src]\").forEach((img) => {\n\t\taddResource(img.getAttribute(\"src\"), \"image\");\n\t});\n\n\t// Process stylesheets\n\tdocument.querySelectorAll(\"link[rel='stylesheet'][href]\").forEach((linkEl) => {\n\t\taddResource(linkEl.getAttribute(\"href\"), \"css\");\n\t});\n\n\t// Process scripts\n\tdocument.querySelectorAll(\"script[src]\").forEach((scriptEl) => {\n\t\taddResource(scriptEl.getAttribute(\"src\"), \"js\");\n\t});\n\n\t// Process fonts\n\tdocument.querySelectorAll(\"link[rel='preload'][as='font'][href]\").forEach((fontEl) => {\n\t\taddResource(fontEl.getAttribute(\"href\"), \"font\");\n\t});\n\n\t// Process videos\n\tdocument.querySelectorAll(\"video source[src]\").forEach((sourceEl) => {\n\t\taddResource(sourceEl.getAttribute(\"src\"), \"video\");\n\t});\n\n\t// Extract background images from inline styles\n\tdocument.querySelectorAll(\"[style]\").forEach((el) => {\n\t\tconst styleAttr = el.getAttribute(\"style\");\n\t\t// More flexible regex that handles spaces and various quoting styles\n\t\tconst regex = /url\\s*\\(\\s*(['\"]?)([^\"')]+)\\1\\s*\\)/gi;\n\t\tlet match;\n\t\twhile ((match = regex.exec(styleAttr)) !== null) {\n\t\t\taddResource(match[2], \"image\");\n\t\t}\n\t});\n\n\t// Extract background images from style elements\n\tdocument.querySelectorAll(\"style\").forEach((styleEl) => {\n\t\tconst cssText = styleEl.textContent;\n\t\tconst regex = /url\\s*\\(\\s*(['\"]?)([^\"')]+)\\1\\s*\\)/gi;\n\t\tlet match;\n\t\twhile ((match = regex.exec(cssText)) !== null) {\n\t\t\taddResource(match[2], \"image\");\n\t\t}\n\t});\n\n\t// Process fonts - expanded methods\n\t// 1. Standard preloaded fonts\n\tdocument.querySelectorAll(\"link[rel='preload'][as='font'][href]\").forEach((fontEl) => {\n\t\taddResource(fontEl.getAttribute(\"href\"), \"font\");\n\t});\n\n\t// 2. Font files by extension\n\tdocument.querySelectorAll(\"link[href]\").forEach((linkEl) => {\n\t\tconst href = linkEl.getAttribute(\"href\");\n\t\tif (href && /\\.(woff2?|ttf|otf|eot)($|\\?)/.test(href)) {\n\t\t\taddResource(href, \"font\");\n\t\t}\n\t});\n\n\t// 3. Check for font URLs in stylesheets\n\tdocument.querySelectorAll(\"style\").forEach((styleEl) => {\n\t\tconst cssText = styleEl.textContent;\n\t\tconst fontRegex = /url\\s*\\(\\s*['\"]?([^'\")]+\\.(woff2?|ttf|otf|eot))['\"]?\\s*\\)/gi;\n\t\tlet match;\n\t\twhile ((match = fontRegex.exec(cssText)) !== null) {\n\t\t\taddResource(match[1], \"font\");\n\t\t}\n\t});\n\n\treturn collectedResources;\n}\n\n/**\n * Collect resources and send them to the background script\n */\nfunction collectPageResources() {\n\tchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n\t\tif (message.action === \"getPageContent\") {\n\t\t\ttry {\n\t\t\t\tconst domainRaw = window.location.hostname;\n\t\t\t\tconst domain = domainRaw.replace(/^www\\./, '');\n\n\t\t\t\t// Clean the HTML before sending it\n\t\t\t\tconst html = cleanupExtensionElements(document.documentElement.outerHTML);\n\n\t\t\t\t// Process resources\n\t\t\t\tcollectAllResources();\n\n\t\t\t\t// Log for debugging\n\t\t\t\tconsole.log(\"Resources found:\", collectedResources);\n\n\t\t\t\tchrome.runtime.sendMessage({\n\t\t\t\t\ttype: \"PAGE_DATA\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdomain: domain,\n\t\t\t\t\t\thtml: html,\n\t\t\t\t\t\tresources: collectedResources,\n\t\t\t\t\t\turl: window.location.href\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"Error in content script:\", err);\n\t\t\t}\n\t\t}\n\t});\n\n\t// Execute immediately for popup-based triggers\n\tchrome.runtime.sendMessage({ type: \"PAGE_READY\" });\n}\n\nmodule.exports = {\n\tcleanupExtensionElements,\n\tcollectPageResources,\n\taddResource\n};\n","const { getToastElements } = require('./toastUI');\n\n/**\n * Show the toast notification\n */\nfunction showToast() {\n\tconst { toast, progressFill, statusElement } = getToastElements();\n\tif (toast) {\n\t\t// Reset file status data when starting a new download\n\t\tdocument.getElementById('success-list').innerHTML = '';\n\t\tdocument.getElementById('skipped-list').innerHTML = '';\n\t\tdocument.getElementById('failed-list').innerHTML = '';\n\n\t\tdocument.getElementById('success-files').style.display = 'none';\n\t\tdocument.getElementById('skipped-files').style.display = 'none';\n\t\tdocument.getElementById('failed-files').style.display = 'none';\n\t\tdocument.getElementById('file-status-container').style.display = 'none';\n\n\t\tstatusElement.textContent = 'Downloading page: 0%';\n\t\tprogressFill.style.width = '0%';\n\t\tprogressFill.style.backgroundColor = '#4688F1';\n\n\t\ttoast.style.display = 'flex';\n\t\ttoast.style.opacity = '1';\n\t}\n}\n\n/**\n * Hide the toast notification\n */\nfunction hideToast() {\n\tconst { toast } = getToastElements();\n\tif (toast) {\n\t\ttoast.style.opacity = '0';\n\t\tsetTimeout(() => {\n\t\t\ttoast.style.display = 'none';\n\t\t}, 300);\n\t}\n}\n\n/**\n * Update the toast progress\n */\nfunction updateToast(percentage) {\n\tconst { toast, progressFill, statusElement } = getToastElements();\n\tif (toast) {\n\t\tstatusElement.textContent = `Downloading page: ${percentage}%`;\n\t\tprogressFill.style.width = `${percentage}%`;\n\t}\n}\n\n/**\n * Mark the download as complete\n */\nfunction completeToast(filename) {\n\tconst { toast, progressFill, statusElement } = getToastElements();\n\tif (toast) {\n\t\tstatusElement.textContent = `Download complete: ${filename}`;\n\t\tprogressFill.style.width = '100%';\n\t\tprogressFill.style.backgroundColor = '#4CAF50';\n\n\t\t// Show file status section if we have any file statuses\n\t\tconst fileContainer = document.getElementById('file-status-container');\n\t\tif (fileContainer && (\n\t\t\tdocument.getElementById('success-list').children.length > 0 ||\n\t\t\tdocument.getElementById('skipped-list').children.length > 0 ||\n\t\t\tdocument.getElementById('failed-list').children.length > 0\n\t\t)) {\n\t\t\tfileContainer.style.display = 'block';\n\t\t}\n\n\t\t// Don't auto-hide toast anymore - user must close manually\n\t}\n}\n\n/**\n * Add file status to the toast\n */\nfunction addFileStatus(url, status, reason) {\n\tconst toast = document.getElementById('page-download-toast');\n\tif (!toast) return;\n\n\tconst listId = `${status}-list`;\n\tconst list = document.getElementById(listId);\n\tif (!list) return;\n\n\t// Make sure the category container is visible\n\tdocument.getElementById(`${status}-files`).style.display = 'block';\n\tdocument.getElementById('file-status-container').style.display = 'block';\n\n\t// Create list item for the file\n\tconst item = document.createElement('li');\n\titem.style.cssText = `\n    margin-bottom: 3px;\n    display: flex;\n    align-items: flex-start;\n  `;\n\n\t// Status icon\n\tconst icon = document.createElement('span');\n\ticon.style.cssText = `\n    margin-right: 5px;\n    font-weight: bold;\n  `;\n\n\t// Get filename from URL first\n\tconst filename = url.split('/').pop().split('?')[0];\n\tlet displayName = filename.length > 30 ? filename.substring(0, 27) + '...' : filename;\n\n\t// Create fileInfo element\n\tconst fileInfo = document.createElement('div');\n\tfileInfo.style.wordBreak = 'break-word';\n\n\tif (status === 'success') {\n\t\ticon.innerHTML = '✓';\n\t\ticon.setAttribute('aria-hidden', 'true');\n\t\ticon.style.color = '#4CAF50';\n\n\t\tconst srSpan = document.createElement('span');\n\t\tsrSpan.textContent = 'Success: ';\n\t\tsrSpan.className = 'sr-only';\n\n\t\tconst titleSpan = document.createElement('span');\n\t\ttitleSpan.setAttribute('title', url);\n\t\ttitleSpan.textContent = displayName;\n\n\t\tfileInfo.appendChild(srSpan);\n\t\tfileInfo.appendChild(titleSpan);\n\t} else if (status === 'skipped') {\n\t\ticon.innerHTML = '⚠️';\n\t\ticon.setAttribute('aria-hidden', 'true');\n\t\ticon.style.color = '#FFC107';\n\n\t\tconst srSpan = document.createElement('span');\n\t\tsrSpan.textContent = 'Skipped: ';\n\t\tsrSpan.className = 'sr-only';\n\n\t\tconst titleSpan = document.createElement('span');\n\t\ttitleSpan.setAttribute('title', url);\n\t\ttitleSpan.textContent = displayName;\n\n\t\tfileInfo.appendChild(srSpan);\n\t\tfileInfo.appendChild(titleSpan);\n\t} else {\n\t\ticon.innerHTML = '✗';\n\t\ticon.setAttribute('aria-hidden', 'true');\n\t\ticon.style.color = '#F44336';\n\n\t\tconst srSpan = document.createElement('span');\n\t\tsrSpan.textContent = 'Failed: ';\n\t\tsrSpan.className = 'sr-only';\n\n\t\tconst titleSpan = document.createElement('span');\n\t\ttitleSpan.setAttribute('title', url);\n\t\ttitleSpan.textContent = displayName;\n\n\t\tfileInfo.appendChild(srSpan);\n\t\tfileInfo.appendChild(titleSpan);\n\t}\n\n\t// Add reason if provided\n\tif (reason) {\n\t\tfileInfo.appendChild(document.createElement('br'));\n\t\tconst small = document.createElement('small');\n\t\tsmall.textContent = reason;\n\t\tfileInfo.appendChild(small);\n\t}\n\n\titem.appendChild(icon);\n\titem.appendChild(fileInfo);\n\tlist.appendChild(item);\n}\n\nmodule.exports = {\n\tshowToast,\n\thideToast,\n\tupdateToast,\n\tcompleteToast,\n\taddFileStatus\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// This is a wrapper file for the content script\n// It serves as an entry point for webpack without using ES modules syntax\n\n(function () {\n\t// Require all needed modules\n\trequire('./index');\n})();\n"],"names":[],"sourceRoot":""}