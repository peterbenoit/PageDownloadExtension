chrome.runtime.onInstalled.addListener(()=>{console.log("Extension installed.")});importScripts("jszip.min.js");chrome.runtime.onMessage.addListener((t,n,s)=>t.type==="PAGE_DATA"?(D(t.data,n).then(()=>s({success:!0})).catch(r=>s({success:!1,error:r.message})),!0):!1);function a(t,n,s){console[n](s),chrome.tabs.sendMessage(t,{type:"LOG",level:n,message:s})}function d(t,n,s,r=null){chrome.tabs.sendMessage(t,{type:"FILE_STATUS",url:n,status:s,reason:r})}async function D(t,n){const{domain:s,html:r,resources:m,url:y}=t,o=n.tab.id,x=new JSZip,b=x.folder(s);let $="index.html";try{const p=new URL(y).pathname;p.length>1&&p.endsWith(".html")&&($=p.split("/").pop())}catch{a(o,"warn","Couldn't parse URL, using index.html as default")}const L=C(r);b.file($,L);let S=0;const R=m.length;chrome.action.setBadgeText({text:"0%"}),chrome.action.setBadgeBackgroundColor({color:"#4688F1"}),chrome.storage.sync.get({maxResourceSize:30,maxTotalSize:120,downloadCss:!0,downloadJs:!0,downloadImages:!0,downloadFonts:!0,downloadVideos:!0},function(c){const p=c.maxResourceSize,w=c.maxTotalSize;a(o,"log",`Settings loaded: Max Resource Size: ${p}MB, Max Total Size: ${w}MB`),async function(){let T=0;chrome.tabs.sendMessage(o,{type:"DOWNLOAD_STARTED"});for(const e of m)try{const f={css:{folder:"css",extension:".css",sameDomainOnly:!1},js:{folder:"js",extension:".js",sameDomainOnly:!0},image:{folder:"images",extension:null,sameDomainOnly:!1},font:{folder:"fonts",extension:null,sameDomainOnly:!1},video:{folder:"videos",extension:null,sameDomainOnly:!0}};let l=f[e.type];if(!l)continue;if(e.type==="css"&&!c.downloadCss){a(o,"warn",`User disabled CSS downloads: ${e.url}`),d(o,e.url,"skipped","CSS disabled by user");continue}if(e.type==="js"&&!c.downloadJs){a(o,"warn",`User disabled JS downloads: ${e.url}`),d(o,e.url,"skipped","JS disabled by user");continue}if(e.type==="image"&&!c.downloadImages){a(o,"warn",`User disabled Images downloads: ${e.url}`),d(o,e.url,"skipped","Images disabled by user");continue}if(e.type==="font"&&!c.downloadFonts){a(o,"warn",`User disabled Fonts downloads: ${e.url}`),d(o,e.url,"skipped","Fonts disabled by user");continue}if(e.type==="video"&&!c.downloadVideos){a(o,"warn",`User disabled Videos downloads: ${e.url}`),d(o,e.url,"skipped","Videos disabled by user");continue}if(l.sameDomainOnly&&e.url.startsWith("http")&&new URL(e.url).hostname!==s){a(o,"warn",`Skipping cross-domain resource: ${e.url}`),d(o,e.url,"skipped","Cross-domain resource");continue}let u=e.filename||e.url.split("/").pop().split("?")[0];if(e.url.includes("/_next/image")&&e.url.includes("url="))try{const i=e.url.match(/url=([^&]+)/);if(i&&i[1]){const g=decodeURIComponent(i[1]).split("/").pop().split("?")[0];g&&(u=g)}}catch(i){a(o,"warn",`Error extracting Next.js image name: ${i.message}`)}if(l.extension&&!u.endsWith(l.extension)&&(l.extension===".js"||l.extension===".css")){if(l.extension===".js")continue;u+=l.extension}l.folder==="images"&&(e.url.includes("/img/")||e.url.includes("/images/"))&&(u=e.url.split("/").pop().split("?")[0]),(l.folder==="fonts"||/\.(woff2?|ttf|otf|eot)($|\?)/.test(u.toLowerCase())||e.url.includes("/fonts/"))&&(l=f.font),a(o,"log",`Fetching resource: ${e.url} \u2192 ${u}`);const M=new AbortController,z=setTimeout(()=>M.abort(),3e4);try{const i=await fetch(e.url,{signal:M.signal,credentials:"omit",cache:"force-cache"});if(clearTimeout(z),!i.ok)throw new Error(`HTTP error ${i.status}: ${i.statusText}`);const h=await i.blob(),g=i.headers.get("content-type");if(g&&g.includes("font/")&&(l=f.font),h.size>p*1024*1024){a(o,"warn",`Skipping ${e.url}: exceeds maximum resource size`),d(o,e.url,"skipped",`Exceeds max size limit (${p}MB)`);continue}T+=h.size,T>w*1024*1024&&a(o,"warn",`Total size exceeds limit of ${w}MB`),b.folder(l.folder).file(u,h),a(o,"log",`Successfully added to ZIP: ${u}`),d(o,e.url,"success")}catch(i){clearTimeout(z),a(o,"error",`Failed to fetch ${e.url}: ${i.message}`),d(o,e.url,"failed",i.message);continue}S++;const E=Math.round(S/R*100);chrome.action.setBadgeText({text:`${E}%`}),chrome.tabs.sendMessage(o,{type:"DOWNLOAD_PROGRESS",percentage:E})}catch(f){a(o,"error",`Error processing resource ${e.url}: ${f.message}`)}const U=A(s,y);try{const e=await x.generateAsync({type:"blob"}),f=await F(e);O(U,f),chrome.action.setBadgeText({text:""}),chrome.tabs.sendMessage(o,{type:"DOWNLOAD_COMPLETE",filename:U})}catch(e){a(o,"error",`Error generating ZIP file: ${e.message}`)}}()})}function F(t){return new Promise((n,s)=>{const r=new FileReader;r.onloadend=()=>n(r.result),r.onerror=s,r.readAsDataURL(t)})}function O(t,n){chrome.downloads.download({url:n,filename:t,saveAs:!1},s=>{chrome.runtime.lastError&&console.error(chrome.runtime.lastError)})}function A(t,n){try{const r=new URL(n).pathname;if(r==="/"||r==="")return`${t}.zip`;let m=r.split("/").pop().split(".")[0];return m&&m.length>0?`${t}-${m}.zip`:`${t}.zip`}catch(s){return console.warn("Couldn't parse URL for ZIP filename, using domain only",s),`${t}.zip`}}function C(t){return t=t.replace(/<link[^>]*rel=["']stylesheet["'][^>]*href=["']([^"']+)["'][^>]*>/gi,function(n,s){if(s.startsWith("http")){const r=s.split("/").pop().split("?")[0];return n.replace(s,`css/${r}`)}return n}),t=t.replace(/<script[^>]*src=["']([^"']+)["'][^>]*><\/script>/gi,function(n,s){if(s.includes("googletagmanager.com")||s.includes("clarity.ms"))return"";if(s.startsWith("http")){const r=s.split("/").pop().split("?")[0];return n.replace(s,`js/${r}`)}return n}),t=t.replace(/<script[^>]*>[\s\S]*?(gtag\(|clarity\()[\s\S]*?<\/script>/g,""),t=t.replace(/url\(["']?([^"')]+)["']?\)/g,function(n,s){return s.startsWith("http")?`url('images/${s.split("/").pop().split("?")[0]}')`:`url('images/${s.split("/").pop()}')`}),t=t.replace(/<img[^>]*src=["']([^"']+)["'][^>]*>/gi,function(n,s){if(s.startsWith("data:"))return n;const r=s.split("/").pop().split("?")[0];return n.replace(s,`images/${r}`)}),t}
